
The files included in the tarball are
lab0.c, a C source module as required by the spec, which compiles cleanly to an executable lab0,
Makefile, to build the program and the tarball with options: lab0, check, dist and clean, where the option check conducts a series of tests
two screenshots from a gdb session,
	backtrace.png ... showing a segfault and associated stack-trace
	breakpoint.png ... showing a breakpoint and variable inspection
README, this README file with identification information, a description of the included files, the smoke-test cases in the check target, and any other information about your submission that you would like to bring to our attention (e.g., research, limitations, features, testing methodology)...

Smoke-test cases:
1.1 Run lab0 with no parameter
2.1 Run lab0 with a wrong parameter
3.1 Run lab0 with an input file given
3.2 Run lab0 with a non-existent input file given
3.3 Run lab0 with an input file that cannot be opened given
4.1 Run lab0 with an output file given
4.2 Run lab0 with an output file that cannot be opened given
5.1 Run lab0 with both input and output files given
6.1 Run lab0 with segmentation fault
7.1 Run lab0 with segmentation fault and catch

I found the following websites helpful when doing my research on this project:
For the getopt_long function,
https://www.gnu.org/software/libc/manual/html_node/Getopt-Long-Option-Example.html
For the test shell scripts in make check,
https://web.cs.ucla.edu/classes/spring18/cs111/projects/P0_check.sh
